diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java
index bd159ee0d92a..3c3380cc3c0b 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/filecontroller/LogAggregationFileController.java
@@ -390,7 +390,7 @@ public void verifyAndCreateRemoteLogDir() {
           remoteFS.setPermission(qualified, new FsPermission(TLDIR_PERMISSIONS));
         } catch ( UnsupportedOperationException use) {
           LOG.info("Unable to set permissions for configured filesystem since"
-              + " it does not support this", remoteFS.getScheme());
+              + " it does not support this {}", remoteFS.getScheme());
           fsSupportsChmod = false;
         }
 
@@ -437,7 +437,7 @@ public void verifyAndCreateRemoteLogDir() {
         remoteFS.setPermission(permissionCheckFile, new FsPermission(TLDIR_PERMISSIONS));
       } catch (UnsupportedOperationException use) {
         LOG.info("Unable to set permissions for configured filesystem since"
-            + " it does not support this", remoteFS.getScheme());
+            + " it does not support this {}", remoteFS.getScheme());
         fsSupportsChmod = false;
       } catch (IOException e) {
         LOG.warn("Failed to check if FileSystem supports permissions on "
