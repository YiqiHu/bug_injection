diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeVolumeFailureToleration.java b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeVolumeFailureToleration.java
index a9e4096df4b4..6165f05ee54a 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeVolumeFailureToleration.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/datanode/TestDataNodeVolumeFailureToleration.java
@@ -246,6 +246,9 @@ private void testVolumeConfig(int volumesTolerated, int volumesFailed,
       GenericTestUtils.assertExceptionContains("Invalid value configured for "
           + "dfs.datanode.failed.volumes.tolerated", e);
     } finally {
+      for (File dir : dirs) {
+        FileUtil.chmod(dir.toString(), "755");
+      }
       boolean bpServiceState;
       // If the datanode not registered successfully,
       // because the invalid value configured for tolerated volumes
@@ -257,10 +260,6 @@ private void testVolumeConfig(int volumesTolerated, int volumesFailed,
                     .isBPServiceAlive(cluster.getNamesystem().getBlockPoolId());
       }
       assertEquals(expectedBPServiceState, bpServiceState);
-
-      for (File dir : dirs) {
-        FileUtil.chmod(dir.toString(), "755");
-      }
     }
   }
 
