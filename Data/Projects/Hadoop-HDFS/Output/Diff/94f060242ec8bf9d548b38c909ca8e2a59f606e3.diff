diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java
index 893b237a25bc..c751953f7bc8 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java
@@ -183,13 +183,14 @@ private Options createOptions() {
 
   private FSConfigToCSConfigConverter prepareAndGetConverter(
       CommandLine cliParser) {
-    conversionOptions.setDryRun(
-        cliParser.hasOption(CliOption.DRY_RUN.shortSwitch));
+    boolean dryRun =
+        cliParser.hasOption(CliOption.DRY_RUN.shortSwitch);
+    conversionOptions.setDryRun(dryRun);
     conversionOptions.setNoTerminalRuleCheck(
         cliParser.hasOption(CliOption.NO_TERMINAL_RULE_CHECK.shortSwitch));
 
     checkOptionPresent(cliParser, CliOption.YARN_SITE);
-    checkOutputDefined(cliParser);
+    checkOutputDefined(cliParser, dryRun);
 
     converterParams = validateInputFiles(cliParser);
     ruleHandler = new FSConfigToCSConfigRuleHandler(conversionOptions);
@@ -238,14 +239,15 @@ private static void checkOptionPresent(CommandLine cliParser,
     }
   }
 
-  private static void checkOutputDefined(CommandLine cliParser) {
+  private static void checkOutputDefined(CommandLine cliParser,
+      boolean dryRun) {
     boolean hasOutputDir =
         cliParser.hasOption(CliOption.OUTPUT_DIR.shortSwitch);
 
     boolean console =
         cliParser.hasOption(CliOption.CONSOLE_MODE.shortSwitch);
 
-    if (!console && !hasOutputDir) {
+    if (!console && !hasOutputDir && !dryRun) {
       throw new PreconditionException(
          "Output directory or console mode was not defined. Please" +
           " use -h or --help to see command line switches");
diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/TestFSConfigToCSConfigArgumentHandler.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/TestFSConfigToCSConfigArgumentHandler.java
index 84df90119745..edf4c86ceb2e 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/TestFSConfigToCSConfigArgumentHandler.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/TestFSConfigToCSConfigArgumentHandler.java
@@ -108,12 +108,23 @@ private static List<String> getDefaultArguments() {
         "-o", FSConfigConverterTestCommons.OUTPUT_DIR);
   }
 
+  private static List<String> getDefaultArgumentsWithNoOutput() {
+    return Lists.newArrayList("-y", FSConfigConverterTestCommons.YARN_SITE_XML);
+  }
+
   private String[] getArgumentsAsArrayWithDefaults(String... args) {
     List<String> result = getDefaultArguments();
     result.addAll(Arrays.asList(args));
     return result.toArray(new String[0]);
   }
 
+  private String[] getArgumentsAsArrayWithDefaultsNoOutput(
+      String... args) {
+    List<String> result = getDefaultArgumentsWithNoOutput();
+    result.addAll(Arrays.asList(args));
+    return result.toArray(new String[0]);
+  }
+
   private String[] getArgumentsAsArray(String... args) {
     List<String> result = Lists.newArrayList();
     result.addAll(Arrays.asList(args));
@@ -426,9 +437,9 @@ private void testDryRunWithException(Exception exception,
       String expectedErrorMessage) throws Exception {
     setupFSConfigConversionFiles(true);
 
-    String[] args = getArgumentsAsArrayWithDefaults("-f",
+    String[] args = getArgumentsAsArrayWithDefaultsNoOutput("-f",
         FSConfigConverterTestCommons.FS_ALLOC_FILE,
-        "-r", FSConfigConverterTestCommons.CONVERSION_RULES_FILE, "-p",
+        "-r", FSConfigConverterTestCommons.CONVERSION_RULES_FILE,
         "-d");
     FSConfigToCSConfigArgumentHandler argumentHandler =
         new FSConfigToCSConfigArgumentHandler(conversionOptions);
