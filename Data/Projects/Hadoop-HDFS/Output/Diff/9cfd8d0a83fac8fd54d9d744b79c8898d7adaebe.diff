diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java
index e3feb51d8eeb..e89a547dddc6 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java
@@ -287,6 +287,7 @@ public boolean hasAccess(QueueACL acl, UserGroupInformation user) {
    * Set maximum capacity - used only for testing.
    * @param maximumCapacity new max capacity
    */
+  @VisibleForTesting
   void setMaxCapacity(float maximumCapacity) {
     writeLock.lock();
     try {
@@ -1023,7 +1024,8 @@ Resource getQueueMaxResource(String nodePartition) {
     return getEffectiveMaxCapacity(nodePartition);
   }
 
-  public boolean hasChildQueues() {
+  @VisibleForTesting
+  boolean hasChildQueues() {
     List<CSQueue> childQueues = getChildQueues();
     return childQueues != null && !childQueues.isEmpty();
   }
@@ -1608,7 +1610,7 @@ public boolean isInactiveDynamicQueue() {
             getAutoExpiredDeletionTime());
   }
 
-  public void updateLastSubmittedTimeStamp() {
+  void updateLastSubmittedTimeStamp() {
     writeLock.lock();
     try {
       usageTracker.setLastSubmittedTimestamp(Time.monotonicNow());
@@ -1617,7 +1619,8 @@ public void updateLastSubmittedTimeStamp() {
     }
   }
 
-  public long getLastSubmittedTimestamp() {
+  @VisibleForTesting
+  long getLastSubmittedTimestamp() {
     readLock.lock();
 
     try {
@@ -1628,7 +1631,7 @@ public long getLastSubmittedTimestamp() {
   }
 
   @VisibleForTesting
-  public void setLastSubmittedTimestamp(long lastSubmittedTimestamp) {
+  void setLastSubmittedTimestamp(long lastSubmittedTimestamp) {
     writeLock.lock();
     try {
       usageTracker.setLastSubmittedTimestamp(lastSubmittedTimestamp);
