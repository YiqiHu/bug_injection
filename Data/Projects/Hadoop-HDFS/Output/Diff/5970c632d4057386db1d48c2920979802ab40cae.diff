diff --git a/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/ITestOutputStreamSemantics.java b/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/ITestOutputStreamSemantics.java
index 835b82c3c192..f516f302a2a7 100644
--- a/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/ITestOutputStreamSemantics.java
+++ b/hadoop-tools/hadoop-azure/src/test/java/org/apache/hadoop/fs/azure/ITestOutputStreamSemantics.java
@@ -37,7 +37,6 @@
 import org.hamcrest.core.IsNot;
 import org.junit.Test;
 
-import static org.apache.hadoop.fs.contract.ContractTestUtils.assertCapabilities;
 import static org.apache.hadoop.fs.contract.ContractTestUtils.assertHasStreamCapabilities;
 import static org.apache.hadoop.fs.contract.ContractTestUtils.assertLacksStreamCapabilities;
 
@@ -191,14 +190,13 @@ public void testPageBlobClose() throws IOException {
   public void testPageBlobCapabilities() throws IOException {
     Path path = getBlobPathWithTestName(PAGE_BLOB_DIR);
     try (FSDataOutputStream stream = fs.create(path)) {
-      assertCapabilities(stream,
-          new String[]{
-            StreamCapabilities.HFLUSH,
-            StreamCapabilities.HSYNC,
-            StreamCapabilities.DROPBEHIND,
-            StreamCapabilities.READAHEAD,
-            StreamCapabilities.UNBUFFER},
-          null);
+      assertHasStreamCapabilities(stream,
+          StreamCapabilities.HFLUSH,
+          StreamCapabilities.HSYNC);
+      assertLacksStreamCapabilities(stream,
+          StreamCapabilities.DROPBEHIND,
+          StreamCapabilities.READAHEAD,
+          StreamCapabilities.UNBUFFER);
       stream.write(getRandomBytes());
     }
   }
@@ -386,7 +384,8 @@ public void testBlockBlobCompactionCapabilities() throws IOException {
     try (FSDataOutputStream stream = fs.create(path)) {
       assertHasStreamCapabilities(stream,
           StreamCapabilities.HFLUSH,
-          StreamCapabilities.HSYNC,
+          StreamCapabilities.HSYNC);
+      assertLacksStreamCapabilities(stream,
           StreamCapabilities.DROPBEHIND,
           StreamCapabilities.READAHEAD,
           StreamCapabilities.UNBUFFER);
