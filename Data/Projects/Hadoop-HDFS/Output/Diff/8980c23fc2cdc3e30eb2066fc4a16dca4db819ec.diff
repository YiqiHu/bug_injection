diff --git a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SimpleGroupsMapping.java b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SimpleGroupsMapping.java
index 1fbab2dee72e..b7d44c88c803 100644
--- a/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SimpleGroupsMapping.java
+++ b/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/test/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SimpleGroupsMapping.java
@@ -50,7 +50,13 @@ public void cacheGroupsAdd(List<String> groups) throws IOException {
 
   @Override
   public Set<String> getGroupsSet(String user) throws IOException {
-    return ImmutableSet.of(user + "group", user + "subgroup1",
-        user + "subgroup2");
+    if ("admins".equals(user)) {
+      return ImmutableSet.of("root");
+    } else if ("nosecondarygroupuser".equals(user)) {
+      return ImmutableSet.of("primarygrouponly");
+    } else {
+      return ImmutableSet.of(user + "group", user + "subgroup1",
+          user + "subgroup2");
+    }
   }
 }
