diff --git a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java
index 6ab22e6aaa28..be465afb6e0f 100644
--- a/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java
+++ b/hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java
@@ -616,8 +616,8 @@ BatchedListEntries<EncryptionZone> listEncryptionZones(long prevId)
   /**
    * Resolves the path to inode id, then check if it's the same as the inode id
    * passed in. This is necessary to filter out zones in snapshots.
-   * @param zoneId
-   * @param zonePath
+   * @param zoneId of the encryption zone
+   * @param zonePath encryption zone inode path
    * @return true if path resolve to the id, false if not.
    * @throws AccessControlException
    * @throws ParentNotDirectoryException
@@ -645,8 +645,8 @@ private boolean pathResolvesToId(final long zoneId, final String zonePath)
   /**
    * Re-encrypts the given encryption zone path. If the given path is not the
    * root of an encryption zone, an exception is thrown.
-   * @param zoneIIP
-   * @param keyVersionName
+   * @param zoneIIP encryption zone inodes in the path containing the file
+   * @param keyVersionName encryption zone version
    * @throws IOException
    */
   List<XAttr> reencryptEncryptionZone(final INodesInPath zoneIIP,
@@ -677,7 +677,7 @@ List<XAttr> reencryptEncryptionZone(final INodesInPath zoneIIP,
    * Cancels the currently-running re-encryption of the given encryption zone.
    * If the given path is not the root of an encryption zone,
    * an exception is thrown.
-   * @param zoneIIP
+   * @param zoneIIP encryption zone inodes in the path containing the file
    * @throws IOException
    */
   List<XAttr> cancelReencryptEncryptionZone(final INodesInPath zoneIIP)
@@ -700,7 +700,8 @@ List<XAttr> cancelReencryptEncryptionZone(final INodesInPath zoneIIP)
    * Cursor-based listing of zone re-encryption status.
    * <p>
    * Called while holding the FSDirectory lock.
-   * @param prevId
+   * @param prevId for a given encryption zone id, a larger and more
+   *               encryption zone can be found
    * @throws IOException
    */
   BatchedListEntries<ZoneReencryptionStatus> listReencryptionStatus(
@@ -742,8 +743,8 @@ BatchedListEntries<ZoneReencryptionStatus> listReencryptionStatus(
 
   /**
    * Return whether an INode is an encryption zone root.
-   * @param inode
-   * @param name
+   * @param inode of the encryption zone inode
+   * @param name the path name of the encrypted zone inode
    * @return true when INode is an encryption zone root else false
    * @throws FileNotFoundException
    */
@@ -767,7 +768,7 @@ boolean isEncryptionZoneRoot(final INode inode, final String name)
    * Return whether an INode is an encryption zone root.
    *
    * @param inode the zone inode
-   * @param name
+   * @param name the path name of the encrypted zone inode
    * @throws IOException if the inode is not a directory,
    *                     or is a directory but not the root of an EZ.
    */
