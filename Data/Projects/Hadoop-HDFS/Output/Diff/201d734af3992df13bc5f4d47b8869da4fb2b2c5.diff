diff --git a/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/MountTableProcedure.java b/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/MountTableProcedure.java
index 8f789831d394..a960062ef1ef 100644
--- a/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/MountTableProcedure.java
+++ b/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/MountTableProcedure.java
@@ -43,9 +43,9 @@
 /**
  * Update mount table.
  * Old mount table:
- *   /a/b/c -> {ns:src path:/a/b/c}
+ *   /a/b/c -&gt; {ns:src path:/a/b/c}
  * New mount table:
- *   /a/b/c -> {ns:dst path:/a/b/c}
+ *   /a/b/c -&gt; {ns:dst path:/a/b/c}
  */
 public class MountTableProcedure extends BalanceProcedure {
 
diff --git a/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/procedure/BalanceProcedureScheduler.java b/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/procedure/BalanceProcedureScheduler.java
index 0f82b88f0a93..a27db1067339 100644
--- a/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/procedure/BalanceProcedureScheduler.java
+++ b/hadoop-tools/hadoop-federation-balance/src/main/java/org/apache/hadoop/tools/fedbalance/procedure/BalanceProcedureScheduler.java
@@ -44,6 +44,7 @@
 import static org.apache.hadoop.tools.fedbalance.FedBalanceConfigs.WORK_THREAD_NUM_DEFAULT;
 import static org.apache.hadoop.tools.fedbalance.FedBalanceConfigs.JOURNAL_CLASS;
 /**
+ * <pre>
  * The state machine framework consist of:
  *   Job:                The state machine. It implements the basic logic of the
  *                       state machine.
@@ -54,7 +55,7 @@
  *   Journal:            It handles the job persistence and recover.
  *
  * Example:
- *   Job.Builder builder = new Job.Builder<>();
+ *   Job.Builder builder = new Job.Builder&lt;&gt;();
  *   builder.nextProcedure(new WaitProcedure("wait", 1000, 30 * 1000));
  *   Job job = builder.build();
  *
@@ -62,6 +63,7 @@
  *   scheduler.init();
  *   scheduler.submit(job);
  *   scheduler.waitUntilDone(job);
+ * </pre>
  */
 public class BalanceProcedureScheduler {
   public static final Logger LOG =
