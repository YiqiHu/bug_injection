diff --git a/hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/ViewDistributedFileSystem.java b/hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/ViewDistributedFileSystem.java
index 4fee96329061..2894a244a470 100644
--- a/hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/ViewDistributedFileSystem.java
+++ b/hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/ViewDistributedFileSystem.java
@@ -376,7 +376,6 @@ public HdfsDataOutputStream create(final Path f,
   }
 
   @Override
-  //DFS specific API
   public FSDataOutputStream create(final Path f, final FsPermission permission,
       final EnumSet<CreateFlag> cflags, final int bufferSize,
       final short replication, final long blockSize,
@@ -387,12 +386,8 @@ public FSDataOutputStream create(final Path f, final FsPermission permission,
           .create(f, permission, cflags, bufferSize, replication, blockSize,
               progress, checksumOpt);
     }
-    ViewFileSystemOverloadScheme.MountPathInfo<FileSystem> mountPathInfo =
-        this.vfs.getMountPathInfo(f, getConf());
-    checkDFS(mountPathInfo.getTargetFs(), "create");
-    return mountPathInfo.getTargetFs()
-        .create(mountPathInfo.getPathOnTarget(), permission, cflags, bufferSize,
-            replication, blockSize, progress, checksumOpt);
+    return vfs.create(f, permission, cflags, bufferSize, replication, blockSize,
+        progress, checksumOpt);
   }
 
   void checkDFS(FileSystem fs, String methodName) {
