public class SyncableDataOutputStream extends DataOutputStream    implements Syncable, StreamCapabilities {  private static final Logger LOG = LoggerFactory.getLogger(SyncableDataOutputStream.class);  public SyncableDataOutputStream(OutputStream out) {    super(out);  }    @InterfaceAudience.LimitedPrivate({"HDFS"})  public OutputStream getOutStream() {    return out;  }  @Override  public boolean hasCapability(String capability) {    if (out instanceof StreamCapabilities) {      return ((StreamCapabilities) out).hasCapability(capability);    }    return false;  }  @Override  public void hflush() throws IOException {    if (out instanceof Syncable) {      ((Syncable) out).hflush();    }  }  @Override  public void hsync() throws IOException {    if (out instanceof Syncable) {      ((Syncable) out).hsync();    }  }  @Override  public void close() throws IOException {    IOException ioeFromFlush = null;    try {      flush();    } catch (IOException e) {      ioeFromFlush = e;      throw e;    } finally {      try {        this.out.close();      } catch (IOException e) {                                                        if (ioeFromFlush == e) {                              LOG.debug("flush() and close() throwing back same Exception. Just swallowing the latter", e);        } else {                    throw e;        }      }    }  }}