public abstract class Verifier extends RpcAuthInfo {  protected Verifier(AuthFlavor flavor) {    super(flavor);  }    public static Verifier readFlavorAndVerifier(XDR xdr) {    AuthFlavor flavor = AuthFlavor.fromValue(xdr.readInt());    final Verifier verifer;    if (flavor == AuthFlavor.AUTH_NONE) {      verifer = new VerifierNone();    } else if (flavor == AuthFlavor.AUTH_SYS) {                              verifer = new VerifierNone();    } else if (flavor == AuthFlavor.RPCSEC_GSS) {      verifer = new VerifierGSS();    } else {      throw new UnsupportedOperationException("Unsupported verifier flavor: "          + flavor);    }    verifer.read(xdr);    return verifer;  }      public static void writeFlavorAndVerifier(Verifier verifier, XDR xdr) {    if (verifier instanceof VerifierNone) {      xdr.writeInt(AuthFlavor.AUTH_NONE.getValue());    } else if (verifier instanceof VerifierGSS) {      xdr.writeInt(AuthFlavor.RPCSEC_GSS.getValue());    } else {      throw new UnsupportedOperationException("Cannot recognize the verifier");    }    verifier.write(xdr);  }  }