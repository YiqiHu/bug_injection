public enum S3AEncryptionMethods {  NONE("", false, false),  SSE_S3("AES256", true, false),  SSE_KMS("SSE-KMS", true, false),  SSE_C("SSE-C", true, true),  CSE_KMS("CSE-KMS", false, true),  CSE_CUSTOM("CSE-CUSTOM", false, true);    static final String UNKNOWN_ALGORITHM      = "Unknown encryption algorithm ";    private final String method;    private final boolean serverSide;    private final boolean requiresSecret;  S3AEncryptionMethods(String method,      final boolean serverSide,      final boolean requiresSecret) {    this.method = method;    this.serverSide = serverSide;    this.requiresSecret = requiresSecret;  }  public String getMethod() {    return method;  }    public boolean isServerSide() {    return serverSide;  }    public boolean requiresSecret() {    return requiresSecret;  }    public static S3AEncryptionMethods getMethod(String name) throws IOException {    if(StringUtils.isBlank(name)) {      return NONE;    }    for (S3AEncryptionMethods v : values()) {      if (v.getMethod().equalsIgnoreCase(name)) {        return v;      }    }    throw new IOException(UNKNOWN_ALGORITHM + name);  }}