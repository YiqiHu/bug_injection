public class TestViewFsTrash {  FileSystem fsTarget;    FileSystem fsView;  Configuration conf;  private FileSystemTestHelper fileSystemTestHelper;  @Before  public void setUp() throws Exception {    Configuration targetFSConf = new Configuration();    targetFSConf.setClass("fs.file.impl", TestTrash.TestLFS.class, FileSystem.class);    fsTarget = FileSystem.getLocal(targetFSConf);    fileSystemTestHelper = new FileSystemTestHelper(fsTarget.getHomeDirectory().toUri().getPath());    conf = ViewFileSystemTestSetup.createConfig();    fsView = ViewFileSystemTestSetup.setupForViewFileSystem(conf, fileSystemTestHelper, fsTarget);    conf.set("fs.defaultFS", FsConstants.VIEWFS_URI.toString());        conf.setClass("fs.file.impl", TestTrash.TestLFS.class, FileSystem.class);  }   @After  public void tearDown() throws Exception {    ViewFileSystemTestSetup.tearDown(fileSystemTestHelper, fsTarget);    fsTarget.delete(new Path(fsTarget.getHomeDirectory(), ".Trash/Current"),        true);  }    @Test  public void testTrash() throws Exception {    TestTrash.trashShell(conf, fileSystemTestHelper.getTestRootPath(fsView),        fsView, new Path(fileSystemTestHelper.getTestRootPath(fsView), ".Trash/Current"));  }  @Test  public void testLocalizedTrashInMoveToAppropriateTrash() throws IOException {    Configuration conf2 = new Configuration(conf);    Path testFile = new Path("/data/testfile.txt");        conf2.setLong(FS_TRASH_INTERVAL_KEY, 1);    ConfigUtil.addLink(conf2, "/data", new Path(fileSystemTestHelper.getAbsoluteTestRootPath(fsTarget), "data").toUri());        conf2.setBoolean(CONFIG_VIEWFS_TRASH_FORCE_INSIDE_MOUNT_POINT, false);    try (FileSystem fsView2 = FileSystem.get(conf2)) {      FileSystemTestHelper.createFile(fsView2, testFile);      Path resolvedFile = fsView2.resolvePath(testFile);      Trash.moveToAppropriateTrash(fsView2, testFile, conf2);      Trash trash = new Trash(fsTarget, conf2);      Path movedPath = Path.mergePaths(trash.getCurrentTrashDir(testFile), resolvedFile);      ContractTestUtils.assertPathExists(fsTarget, "File not in trash", movedPath);    }        conf2.setBoolean(CONFIG_VIEWFS_TRASH_FORCE_INSIDE_MOUNT_POINT, true);    try (FileSystem fsView2 = FileSystem.get(conf2)) {      FileSystemTestHelper.createFile(fsView2, testFile);      Trash.moveToAppropriateTrash(fsView2, testFile, conf2);      Trash trash = new Trash(fsView2, conf2);      Path movedPath = Path.mergePaths(trash.getCurrentTrashDir(testFile), testFile);      ContractTestUtils.assertPathExists(fsView2, "File not in localized trash", movedPath);    }  }}