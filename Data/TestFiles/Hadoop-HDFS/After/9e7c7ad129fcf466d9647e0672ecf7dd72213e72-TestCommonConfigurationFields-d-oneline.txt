public class TestCommonConfigurationFields extends TestConfigurationFieldsBase {  @SuppressWarnings("deprecation")  @Override  public void initializeMemberVariables() {    xmlFilename = new String("core-default.xml");    configurationClasses = new Class[] {        CommonConfigurationKeys.class,        CommonConfigurationKeysPublic.class,        LocalConfigKeys.class,        FtpConfigKeys.class,        SshFenceByTcpPort.class,        LdapGroupsMapping.class,        ZKFailoverController.class,        SSLFactory.class,        CompositeGroupsMapping.class,        CodecUtil.class,        RuleBasedLdapGroupsMapping.class        };        xmlPropsToSkipCompare = new HashSet<String>();    xmlPrefixToSkipCompare = new HashSet<String>();    configurationPropsToSkipCompare = new HashSet<String>();        errorIfMissingConfigProps = true;    errorIfMissingXmlProps = false;        xmlPropsToSkipCompare.add("fs.ftp.password.localhost");    xmlPropsToSkipCompare.add("fs.ftp.user.localhost");    xmlPropsToSkipCompare.add("fs.ftp.data.connection.mode");    xmlPropsToSkipCompare.add("fs.ftp.transfer.mode");    xmlPropsToSkipCompare.add("fs.ftp.timeout");    xmlPropsToSkipCompare.add("hadoop.tmp.dir");    xmlPropsToSkipCompare.add("nfs3.mountd.port");    xmlPropsToSkipCompare.add("nfs3.server.port");    xmlPropsToSkipCompare.add("fs.viewfs.rename.strategy");        xmlPrefixToSkipCompare.add("fs.s3a.");        xmlPrefixToSkipCompare.add("fs.o3fs.");            xmlPrefixToSkipCompare.add("fs.ftp.impl");            xmlPrefixToSkipCompare.add("fs.wasb.impl");    xmlPrefixToSkipCompare.add("fs.wasbs.impl");    xmlPrefixToSkipCompare.add("fs.azure.");    xmlPrefixToSkipCompare.add("fs.abfs.impl");    xmlPrefixToSkipCompare.add("fs.abfss.impl");            xmlPrefixToSkipCompare.add("adl.");    xmlPrefixToSkipCompare.add("fs.adl.");    xmlPropsToSkipCompare.add("fs.AbstractFileSystem.adl.impl");            xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.abfs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.abfss.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.file.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.ftp.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.hdfs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.http.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.https.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.ofs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.o3fs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.oss.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.s3a.impl");    xmlPropsToSkipCompare.        add("fs.viewfs.overload.scheme.target.swebhdfs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.webhdfs.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.wasb.impl");    xmlPropsToSkipCompare.add("fs.viewfs.overload.scheme.target.swift.impl");                xmlPropsToSkipCompare.add("fs.azure.sas.expiry.period");    xmlPropsToSkipCompare.add("fs.azure.local.sas.key.mode");    xmlPropsToSkipCompare.add("fs.azure.secure.mode");    xmlPropsToSkipCompare.add("fs.azure.authorization");    xmlPropsToSkipCompare.add("fs.azure.authorization.caching.enable");    xmlPropsToSkipCompare.add("fs.azure.saskey.usecontainersaskeyforallaccess");    xmlPropsToSkipCompare.add("fs.azure.user.agent.prefix");        xmlPropsToSkipCompare.add("ipc.[port_number].backoff.enable");    xmlPropsToSkipCompare.add("ipc.[port_number].callqueue.impl");    xmlPropsToSkipCompare.add("ipc.[port_number].scheduler.impl");    xmlPropsToSkipCompare.add("ipc.[port_number].scheduler.priority.levels");    xmlPropsToSkipCompare.add(        "ipc.[port_number].faircallqueue.multiplexer.weights");    xmlPropsToSkipCompare.add("ipc.[port_number].identity-provider.impl");    xmlPropsToSkipCompare.add("ipc.[port_number].cost-provider.impl");    xmlPropsToSkipCompare.add("ipc.[port_number].decay-scheduler.period-ms");    xmlPropsToSkipCompare.add("ipc.[port_number].decay-scheduler.decay-factor");    xmlPropsToSkipCompare.add("ipc.[port_number].decay-scheduler.thresholds");    xmlPropsToSkipCompare.add(        "ipc.[port_number].decay-scheduler.backoff.responsetime.enable");    xmlPropsToSkipCompare.add(        "ipc.[port_number].decay-scheduler.backoff.responsetime.thresholds");    xmlPropsToSkipCompare.add(        "ipc.[port_number].decay-scheduler.metrics.top.user.count");    xmlPropsToSkipCompare.add(        "ipc.[port_number].decay-scheduler.service-users");    xmlPropsToSkipCompare.add("ipc.[port_number].weighted-cost.lockshared");    xmlPropsToSkipCompare.add("ipc.[port_number].weighted-cost.lockexclusive");    xmlPropsToSkipCompare.add("ipc.[port_number].weighted-cost.handler");    xmlPropsToSkipCompare.add("ipc.[port_number].weighted-cost.lockfree");    xmlPropsToSkipCompare.add("ipc.[port_number].weighted-cost.response");            configurationPropsToSkipCompare        .add(CommonConfigurationKeysPublic.IO_SORT_MB_KEY);    configurationPropsToSkipCompare        .add(CommonConfigurationKeysPublic.IO_SORT_FACTOR_KEY);        configurationPropsToSkipCompare.add("dr.who");            xmlPropsToSkipCompare        .add("io.bytes.per.checksum");                    xmlPropsToSkipCompare.add("hadoop.http.filter.initializers");        xmlPrefixToSkipCompare.add(HttpCrossOriginFilterInitializer.PREFIX);    xmlPrefixToSkipCompare.add("fs.AbstractFileSystem.");        xmlPrefixToSkipCompare.add("dfs.ha.fencing.ssh.");        xmlPrefixToSkipCompare.add("hadoop.registry.");        xmlPrefixToSkipCompare.add("hadoop.http.authentication.");        xmlPropsToSkipCompare.add(KMSClientProvider.AUTH_RETRY);        xmlPropsToSkipCompare.add("hadoop.workaround.non.threadsafe.getpwuid");        xmlPropsToSkipCompare.add("dfs.ha.fencing.methods");        xmlPrefixToSkipCompare        .add(CommonConfigurationKeysPublic.HADOOP_SECURITY_CRYPTO_CODEC_CLASSES_KEY_PREFIX);        xmlPropsToSkipCompare.add("hadoop.common.configuration.version");        xmlPropsToSkipCompare.add("fs.har.impl.disable.cache");        xmlPropsToSkipCompare.add("fs.swift.impl");        xmlPropsToSkipCompare.add("hadoop.htrace.span.receiver.classes");            xmlPropsToSkipCompare.add("ha.zookeeper.parent-znode");    xmlPropsToSkipCompare.add("ha.zookeeper.session-timeout.ms");        xmlPrefixToSkipCompare        .add(CommonConfigurationKeys.FS_CLIENT_HTRACE_PREFIX);        xmlPropsToSkipCompare.add("hadoop.kerberos.kinit.command");        xmlPropsToSkipCompare        .add("hadoop.rpc.socket.factory.class.ClientProtocol");            xmlPropsToSkipCompare.add("io.compression.codec.bzip2.library");        xmlPropsToSkipCompare.add("io.seqfile.local.dir");    xmlPropsToSkipCompare.add("hadoop.http.sni.host.check.enabled");  }}