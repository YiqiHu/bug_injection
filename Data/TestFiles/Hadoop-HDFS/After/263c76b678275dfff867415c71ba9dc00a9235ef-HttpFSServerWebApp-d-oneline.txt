public class HttpFSServerWebApp extends ServerWebApp {  private static final Logger LOG =    LoggerFactory.getLogger(HttpFSServerWebApp.class);    public static final String NAME = "httpfs";    public static final String CONF_ADMIN_GROUP = "admin.group";  private static HttpFSServerWebApp SERVER;  private String adminGroup;    public HttpFSServerWebApp() throws IOException {    super(NAME);  }    public HttpFSServerWebApp(String homeDir, String configDir, String logDir,                               String tempDir, Configuration config) {    super(NAME, homeDir, configDir, logDir, tempDir, config);  }    public HttpFSServerWebApp(String homeDir, Configuration config) {    super(NAME, homeDir, config);  }    @Override  public void init() throws ServerException {    if (SERVER != null) {      throw new RuntimeException("HttpFSServer server already initialized");    }    SERVER = this;    super.init();    adminGroup = getConfig().get(getPrefixedName(CONF_ADMIN_GROUP), "admin");    LOG.info("Connects to Namenode [{}]",             get().get(FileSystemAccess.class).getFileSystemConfiguration().               getTrimmed(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY));  }    @Override  public void destroy() {    SERVER = null;    super.destroy();  }    public static HttpFSServerWebApp get() {    return SERVER;  }    public String getAdminGroup() {    return adminGroup;  }}