public class PathIOException extends IOException {  static final long serialVersionUID = 0L;  private static final String EIO = "Input/output error";        private String operation;  private String path;  private String fullyQualifiedPath;  private String targetPath;    public PathIOException(String path) {    this(path, EIO);  }    public PathIOException(String path, Throwable cause) {    this(path, EIO, cause);  }    public PathIOException(String path, String error) {    super(error);    this.path = path;  }    public PathIOException(String path, String error, Throwable cause) {    super(error, cause);    this.path = path;  }  public PathIOException withFullyQualifiedPath(String fqPath) {    fullyQualifiedPath = fqPath;    return this;  }    @Override  public String getMessage() {    StringBuilder message = new StringBuilder();    if (operation != null) {      message.append(operation + " ");    }    message.append(formatPath(path));    if (targetPath != null) {      message.append(" to " + formatPath(targetPath));    }    message.append(": " + super.getMessage());    if (getCause() != null) {      message.append(": " + getCause().getMessage());    }    if (fullyQualifiedPath != null && !fullyQualifiedPath.equals(path)) {      message.append(": ").append(formatPath(fullyQualifiedPath));    }    return message.toString();  }    public Path getPath()  { return new Path(path); }    public Path getTargetPath() {    return (targetPath != null) ? new Path(targetPath) : null;  }          public void setOperation(String operation) {    this.operation = operation;  }      public void setTargetPath(String targetPath) {    this.targetPath = targetPath;  }    private String formatPath(String path) {    return "`" + path + "'";  }}