

package org.apache.hadoop.io.compress.bzip2;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.FileSystem;
import org.apache.hadoop.fs.Path;

import static org.apache.hadoop.io.compress.SplittableCompressionCodec.READ_MODE.BYBLOCK;

public final class BZip2Utils {

  private BZip2Utils() {
  }

  
  public static List<Long> getNextBlockMarkerOffsets(
      Path path, Configuration conf) throws IOException {
    FileSystem fs = path.getFileSystem(conf);
    try (InputStream fileIn = fs.open(path)) {
      return getNextBlockMarkerOffsets(fileIn);
    }
  }

  
  public static List<Long> getNextBlockMarkerOffsets(InputStream rawIn)
      throws IOException {
    try (CBZip2InputStream in = new CBZip2InputStream(rawIn, BYBLOCK)) {
      ArrayList<Long> offsets = new ArrayList<>();
      while (in.skipToNextBlockMarker()) {
        offsets.add(in.getProcessedByteCount());
      }
      return offsets;
    }
  }
}
