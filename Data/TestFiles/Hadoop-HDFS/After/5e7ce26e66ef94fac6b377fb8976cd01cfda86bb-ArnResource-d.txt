

package org.apache.hadoop.fs.s3a;

import javax.annotation.Nonnull;

import com.amazonaws.arn.Arn;


public final class ArnResource {
  private final static String ACCESSPOINT_ENDPOINT_FORMAT = "s3-accesspoint.%s.amazonaws.com";

  
  private final String name;

  
  private final String ownerAccountId;

  
  private final String region;

  
  private final String fullArn;

  
  private final String partition;

  
  private final String accessPointRegionKey;

  private ArnResource(String name, String owner, String region, String partition, String fullArn) {
    this.name = name;
    this.ownerAccountId = owner;
    this.region = region;
    this.partition = partition;
    this.fullArn = fullArn;
    this.accessPointRegionKey = String.format("accesspoint-%s", region);
  }

  
  public String getName() {
    return name;
  }

  
  public String getOwnerAccountId() {
    return ownerAccountId;
  }

  
  public String getRegion() {
    return region;
  }

  
  public String getFullArn() {
    return fullArn;
  }

  
  public String getEndpoint() {
    return String.format(ACCESSPOINT_ENDPOINT_FORMAT, region);
  }

  
  @Nonnull
  public static ArnResource accessPointFromArn(String arn) throws IllegalArgumentException {
    Arn parsed = Arn.fromString(arn);

    if (parsed.getRegion().isEmpty() || parsed.getAccountId().isEmpty() ||
        parsed.getResourceAsString().isEmpty()) {
      throw new IllegalArgumentException(
          String.format("Access Point Arn %s has an invalid format or missing properties", arn));
    }

    String resourceName = parsed.getResource().getResource();
    return new ArnResource(resourceName, parsed.getAccountId(), parsed.getRegion(),
        parsed.getPartition(), arn);
  }
}
