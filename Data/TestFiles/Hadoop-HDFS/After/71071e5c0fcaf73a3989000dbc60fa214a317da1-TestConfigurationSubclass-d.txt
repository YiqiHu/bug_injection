
package org.apache.hadoop.conf;

import org.junit.Test;
import static org.junit.Assert.*;

import java.util.Properties;



public class TestConfigurationSubclass {
  private static final String EMPTY_CONFIGURATION_XML
          = "/org/apache/hadoop/conf/empty-configuration.xml";


  @Test
  public void testGetProps() {
    SubConf conf = new SubConf(true);
    Properties properties = conf.getProperties();
    assertNotNull("hadoop.tmp.dir is not set",
            properties.getProperty("hadoop.tmp.dir"));
  }

  @Test
  public void testReload() throws Throwable {
    SubConf conf = new SubConf(true);
    assertFalse(conf.isReloaded());
    Configuration.addDefaultResource(EMPTY_CONFIGURATION_XML);
    assertTrue(conf.isReloaded());
    Properties properties = conf.getProperties();
  }

  @Test
  public void testReloadNotQuiet() throws Throwable {
    SubConf conf = new SubConf(true);
    conf.setQuietMode(false);
    assertFalse(conf.isReloaded());
    
    conf.addResource("not-a-valid-resource");
    assertFalse(conf.isReloaded());
    try {
      Properties properties = conf.getProperties();
      fail("Should not have got here");
    } catch (RuntimeException e) {
      assertTrue(e.toString(),e.getMessage().contains("not found"));
    }
  }

  private static class SubConf extends Configuration {

    private boolean reloaded;

    
    private SubConf(boolean loadDefaults) {
      super(loadDefaults);
    }

    public Properties getProperties() {
      return super.getProps();
    }

    
    @Override
    public void reloadConfiguration() {
      super.reloadConfiguration();
      reloaded = true;
    }

    public boolean isReloaded() {
      return reloaded;
    }

    public void setReloaded(boolean reloaded) {
      this.reloaded = reloaded;
    }
  }

}
